# camera parameter file generated Tue May 26 13:22:49 2015

# Intrinsic parameters for pinhole camera model.
# The pinhole camera model is as follows:
# m = A*(R*M + t)
#
# M .. 3x1 world point [mm]
# A .. 3x3 camera intrinsic matrix
#          |f_x  0  c_x|
#      A = | 0  f_y c_y|
#          | 0   0   1 |
#      c_x, c_y .. principal point [pix]
#      f_x, f_y .. focal length in [pix]
#                  f_x = f/s_x, f_y = f/s_y
#                  with f the focal length in [mm] and s_x, s_y the pixel
#                  sizes in [mm/pix]
# R,t .. 3x3 rotation matrix and 3x1 translation vector [mm]
#      pose of camera w.r.t. world (= extrinsic parameters)
# m .. 3x1 image point in homogenous co-ordinates
#      image point in cartesian pixel co-ordinates is given as
#      (x, y) = (m_x/m_z, m_y/m_z)
# Note that only the ratios focal length to pixel size can be determined.
# Given a (known) nominal focal length f (e.g. from camera data sheet) we
# can calculate:
# s_x = f/f_x .. horizontal pixel size [mm/pix]
# s_y = f/f_y .. vertical pixel size [mm/pix]
# r = s_x/s_y .. pixel aspect ratio
#
# Distortion is modelled as follows:
# x_d = x + x*(k1*r^2 + k2*r^4) + 2*p1*x*y + p2*(r^2 + 2*x^2)
# y_d = y + y*(k1*r^2 + k2*r^4) + 2*p1*x*y + p2*(r^2 + 2*y^2)
#
# where (x, y) are ideal, distortion-free image physical co-ordinates,
# (x_d, y_d) are distorted image physical co-ordinates and r^2 = x^2 + y^2
#
# w, h .. image width and height

# focal lengths in [pix]
fx = 518.323396
fy = 515.832379
# principal point [pix]
cx = 313.988589
cy = 264.199595

# (nominal) focal length [mm]
f  = 3.000000
# pixel size [mm/pix]
sx = 0.005788
sy = 0.005816
# aspect ratio: pixel size x/y
r  = 0.995194
# image width and height
w =  1224
h =  1025

# distortion parameters
k1 = 0.139042
k2 = -0.253760
p1 = -0.002705
p2 = -0.002094

# mean reprojection error
err = 0.000484

# poses of calibration object w.r.t. camera for each image
# 3x1 translation vector t [m] and 3x1 rotation vector
nposes = 15
# frame0000.jpg
pose0 = [-80.598 159.591 469.648]  [3.003 0.054 0.375]
# frame0002.jpg
pose1 = [46.786 86.849 994.722]  [-3.073 0.051 0.301]
# frame0003.jpg
pose2 = [231.354 68.430 940.801]  [-3.028 0.043 0.019]
# frame0004.jpg
pose3 = [-376.307 58.412 878.866]  [-3.006 0.025 0.104]
# frame0006.jpg
pose4 = [-59.135 131.619 795.415]  [2.989 -0.193 0.820]
# frame0007.jpg
pose5 = [-85.533 79.860 402.192]  [-3.025 -0.059 -0.047]
# frame0008.jpg
pose6 = [-107.290 -3.936 440.250]  [-3.013 -0.040 0.272]
# frame0009.jpg
pose7 = [-79.676 3.890 465.898]  [-3.038 -0.051 0.186]
# frame0010.jpg
pose8 = [-244.179 -8.657 499.275]  [-2.960 -0.061 -0.057]
# frame0011.jpg
pose9 = [-144.969 63.373 551.390]  [2.461 0.095 -0.384]
# frame0012.jpg
pose10 = [-146.245 -45.453 586.274]  [-2.558 -0.299 0.406]
# frame0013.jpg
pose11 = [34.306 49.316 624.359]  [-2.779 -0.529 0.831]
# frame0015.jpg
pose12 = [5.987 113.638 541.880]  [-3.075 -0.010 0.209]
# frame0016.jpg
pose13 = [229.855 268.863 934.682]  [-3.096 0.073 0.367]
# frame0019.jpg
pose14 = [166.937 -155.219 742.002]  [-2.976 -0.027 -0.135]
